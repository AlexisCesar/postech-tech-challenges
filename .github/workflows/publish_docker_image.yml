name: Publish Docker image

on:
  push:
    branches: ["develop"]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_EMAIL }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Calculate Docker image hash
        id: digest
        run: |
          echo "Calculating hash for source code..."
          # Calculando o hash de arquivos relevantes (Dockerfile e cÃ³digo fonte)
          export IMAGE_HASH=$(cat Dockerfile $(find ./src -type f) | sha256sum | cut -d' ' -f1)
          echo "IMAGE_HASH=${IMAGE_HASH}" >> $GITHUB_ENV

      - name: Check if image already exists on Docker Hub
        id: check-image
        run: |
          IMAGE_EXISTS=$(curl -s "https://hub.docker.com/v2/repositories/aleehcr/lanchonetedobairro_api/tags/${IMAGE_HASH}" | jq -r .name)
          if [ "$IMAGE_EXISTS" == "$IMAGE_HASH" ]; then
            echo "Image with this hash already exists, skipping push."
            exit 0
          fi
          echo "Image does not exist, continuing."

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: aleehcr/lanchonetedobairro_api
          
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: aleehcr/lanchonetedobairro_api:${{ env.IMAGE_HASH }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
