#test
name: Publish Docker image

on:
  push:
    branches: ["develop"]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_EMAIL }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: aleehcr/lanchonetedobairro_api
          
      - name: Calculate image hash based on source code
        id: hash
        run: |
          echo "Calculating hash for source code..."
          export IMAGE_HASH=$(tar -cf - . | sha256sum | cut -d' ' -f1)
          echo "IMAGE_HASH=${IMAGE_HASH}" >> $GITHUB_ENV
          echo "Generated hash: $IMAGE_HASH"

      - name: Check if image already exists on Docker Hub
        id: check-image
        run: |
          # Verificar se a imagem com o hash já existe
          IMAGE_EXISTS=$(docker manifest inspect aleehcr/lanchonetedobairro_api:${{ env.IMAGE_HASH }} > /dev/null 2>&1 && echo "yes" || echo "no")
          
          if [ "$IMAGE_EXISTS" == "yes" ]; then
            echo "Image with hash ${{ env.IMAGE_HASH }} already exists on Docker Hub, skipping push."
            exit 0  # Não faz o push se a imagem já existe
          else
            echo "Image with hash ${{ env.IMAGE_HASH }} does not exist on Docker Hub, continuing with push."
          fi

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: aleehcr/lanchonetedobairro_api:${{ env.IMAGE_HASH }}  
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
